8皇后

TDD 驱动，TDD 不能驱动好的算法，但是驱动更好的代码。 
再写的时候体会baby step 和安全网。
怎么baby step： 保证每一个 小函数都被测过。 这些小函数没有测过，会导致更大的函数失败；这时候由大函数去找小函数，那是一件低效率的事情。 那是费脑费眼抵消。
小函数怎么测？ 如果是共有的直接测； 私有的可以定义一个工具类去测，测好没有问题再去集成；
对于一个私有方法，如果间接去测控制力太弱了。提取一个工具类可以，就可以直接测试他了。
http://cyber-dojo.org/dashboard/show/4980EC7DEF


BalancedParenthesee

1. Junit paramterized function works but it has problem to hard understasnd the case come from
   to complement the parameterized, it need to add the output some information to console to undertand the test case
    for easy to understand the debug.

cyber-dojo great tool to review the growth of the coding
FiceBuzz is simple case can be run by cyber-dojo


annagrams --> this is recursive problem. TDD can easy life on recursive.  And recusive the intuiation way to break down the problem.
cyberdojo, does not easy to import the package, that's annoy.

Coin Change( exchange 1$ to 1,5,10,25 cent)==>

1. redue the code which have sideEffect; ++index, and index++;
2. good test case will help you to think much better
3. if hard to check is the result is right or bad, you can use different way to cacluate and then check wether they are equal



TDD --calc status

1. When you implement one test case, find that it need another class ,help.  It's good way to stop and record what's you are working on papee; 
And try tdd to implement help or dependenct class, after that return back it implement the exsit one.

Other case, it may use mock to implement.



